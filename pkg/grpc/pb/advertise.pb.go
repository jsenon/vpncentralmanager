// Code generated by protoc-gen-go. DO NOT EDIT.
// source: advertise.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Configuration received from node controller
type NodeConf struct {
	Ippublic             string   `protobuf:"bytes,1,opt,name=ippublic,proto3" json:"ippublic,omitempty"`
	Keypublic            string   `protobuf:"bytes,2,opt,name=keypublic,proto3" json:"keypublic,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeConf) Reset()         { *m = NodeConf{} }
func (m *NodeConf) String() string { return proto.CompactTextString(m) }
func (*NodeConf) ProtoMessage()    {}
func (*NodeConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_advertise_10524e0f75012d2f, []int{0}
}
func (m *NodeConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeConf.Unmarshal(m, b)
}
func (m *NodeConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeConf.Marshal(b, m, deterministic)
}
func (dst *NodeConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeConf.Merge(dst, src)
}
func (m *NodeConf) XXX_Size() int {
	return xxx_messageInfo_NodeConf.Size(m)
}
func (m *NodeConf) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeConf.DiscardUnknown(m)
}

var xxx_messageInfo_NodeConf proto.InternalMessageInfo

func (m *NodeConf) GetIppublic() string {
	if m != nil {
		return m.Ippublic
	}
	return ""
}

func (m *NodeConf) GetKeypublic() string {
	if m != nil {
		return m.Keypublic
	}
	return ""
}

func (m *NodeConf) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

// IP Private and allowed range are calculated by VPN Central Manager sent to node controller
type RespNode struct {
	Ipprivate            string   `protobuf:"bytes,1,opt,name=ipprivate,proto3" json:"ipprivate,omitempty"`
	Allowedrange         string   `protobuf:"bytes,2,opt,name=allowedrange,proto3" json:"allowedrange,omitempty"`
	Vpnservername        string   `protobuf:"bytes,3,opt,name=vpnservername,proto3" json:"vpnservername,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespNode) Reset()         { *m = RespNode{} }
func (m *RespNode) String() string { return proto.CompactTextString(m) }
func (*RespNode) ProtoMessage()    {}
func (*RespNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_advertise_10524e0f75012d2f, []int{1}
}
func (m *RespNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespNode.Unmarshal(m, b)
}
func (m *RespNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespNode.Marshal(b, m, deterministic)
}
func (dst *RespNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespNode.Merge(dst, src)
}
func (m *RespNode) XXX_Size() int {
	return xxx_messageInfo_RespNode.Size(m)
}
func (m *RespNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RespNode.DiscardUnknown(m)
}

var xxx_messageInfo_RespNode proto.InternalMessageInfo

func (m *RespNode) GetIpprivate() string {
	if m != nil {
		return m.Ipprivate
	}
	return ""
}

func (m *RespNode) GetAllowedrange() string {
	if m != nil {
		return m.Allowedrange
	}
	return ""
}

func (m *RespNode) GetVpnservername() string {
	if m != nil {
		return m.Vpnservername
	}
	return ""
}

func init() {
	proto.RegisterType((*NodeConf)(nil), "advertise.NodeConf")
	proto.RegisterType((*RespNode)(nil), "advertise.RespNode")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdvertiseClient is the client API for Advertise service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdvertiseClient interface {
	GetConfig(ctx context.Context, in *NodeConf, opts ...grpc.CallOption) (*RespNode, error)
}

type advertiseClient struct {
	cc *grpc.ClientConn
}

func NewAdvertiseClient(cc *grpc.ClientConn) AdvertiseClient {
	return &advertiseClient{cc}
}

func (c *advertiseClient) GetConfig(ctx context.Context, in *NodeConf, opts ...grpc.CallOption) (*RespNode, error) {
	out := new(RespNode)
	err := c.cc.Invoke(ctx, "/advertise.Advertise/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdvertiseServer is the server API for Advertise service.
type AdvertiseServer interface {
	GetConfig(context.Context, *NodeConf) (*RespNode, error)
}

func RegisterAdvertiseServer(s *grpc.Server, srv AdvertiseServer) {
	s.RegisterService(&_Advertise_serviceDesc, srv)
}

func _Advertise_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeConf)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertiseServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/advertise.Advertise/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertiseServer).GetConfig(ctx, req.(*NodeConf))
	}
	return interceptor(ctx, in, info, handler)
}

var _Advertise_serviceDesc = grpc.ServiceDesc{
	ServiceName: "advertise.Advertise",
	HandlerType: (*AdvertiseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _Advertise_GetConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "advertise.proto",
}

func init() { proto.RegisterFile("advertise.proto", fileDescriptor_advertise_10524e0f75012d2f) }

var fileDescriptor_advertise_10524e0f75012d2f = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xbd, 0x4b, 0xc6, 0x30,
	0x10, 0xc6, 0x6d, 0x15, 0x69, 0x0e, 0x45, 0x88, 0x4b, 0x29, 0x0e, 0x12, 0x1c, 0x9c, 0x3a, 0xe8,
	0xe0, 0xec, 0x07, 0xb8, 0x39, 0x74, 0x74, 0x32, 0xb5, 0x67, 0x0d, 0xd6, 0xe4, 0x48, 0x62, 0xe4,
	0xfd, 0xef, 0x5f, 0xd2, 0xb7, 0xe9, 0xc7, 0x78, 0xbf, 0xe3, 0xf2, 0xcb, 0xf3, 0xc0, 0x85, 0xec,
	0x02, 0x5a, 0xaf, 0x1c, 0xd6, 0x64, 0x8d, 0x37, 0x9c, 0xcd, 0x40, 0x7c, 0x40, 0xf1, 0x66, 0x3a,
	0x7c, 0x36, 0xfa, 0x8b, 0x57, 0x50, 0x28, 0xa2, 0xbf, 0x76, 0x50, 0x9f, 0x65, 0x76, 0x9d, 0xdd,
	0xb2, 0x66, 0x9e, 0xf9, 0x15, 0xb0, 0x1f, 0xdc, 0x4d, 0xcb, 0x7c, 0x5c, 0x2e, 0x20, 0x5e, 0x7e,
	0x1b, 0xe7, 0xb5, 0xfc, 0xc5, 0xf2, 0xf8, 0x70, 0x99, 0x66, 0x61, 0xa1, 0x68, 0xd0, 0x51, 0xb4,
	0xc4, 0x57, 0x14, 0x91, 0x55, 0x41, 0x7a, 0x9c, 0x14, 0x0b, 0xe0, 0x02, 0xce, 0xe4, 0x30, 0x98,
	0x7f, 0xec, 0xac, 0xd4, 0x3d, 0x4e, 0x9a, 0x0d, 0xe3, 0x37, 0x70, 0x1e, 0x48, 0x3b, 0xb4, 0x01,
	0xed, 0x4a, 0xb7, 0x85, 0x77, 0x2f, 0xc0, 0x1e, 0x53, 0x44, 0xfe, 0x00, 0xec, 0x15, 0x7d, 0x4c,
	0xa8, 0x7a, 0x7e, 0x59, 0x2f, 0x65, 0xa4, 0xe0, 0xd5, 0x1a, 0xa6, 0xbf, 0x8a, 0xa3, 0xa7, 0x93,
	0xf7, 0x9c, 0xda, 0xf6, 0x74, 0xec, 0xec, 0x7e, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x27, 0x21, 0x7e,
	0xda, 0x46, 0x01, 0x00, 0x00,
}
